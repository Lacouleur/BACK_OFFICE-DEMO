.target_branches:
  tags:
    - sharedftven

# WORKFLOWS
.workflow_integ:
  rules:
    - if: '$CI_COMMIT_BRANCH && $CI_COMMIT_REF_NAME != "master"'

.workflow_preprod:
  rules:
    - if: '$CI_COMMIT_BRANCH && $CI_COMMIT_REF_NAME != "master"'

.workflow_prod:
  rules:
    - if: '$CI_COMMIT_TAG'

# ENVIRONMENTS
.variables_integ:
  variables:
    PHX_ENV_WORKFLOW: integration

.variables_preprod:
  variables:
    PHX_ENV_WORKFLOW: preproduction

.variables_prod:
  variables:
    PHX_ENV_WORKFLOW: production

# GENERAL BUILD
.build:
  image: dockerhub.ftven.net/docker

  stage: build

  extends:
    - .target_branches

  environment:
    name: $PHX_ENV_WORKFLOW

  allow_failure: false

  services:
    - dockerhub.ftven.net/docker:dind

  script:
    - echo $NEXUS_PASSWD | docker login registry.ftven.net -u $NEXUS_USERNAME --password-stdin
    - docker build --build-arg PHX_BACK_API_BASE_URL=$PHX_BACK_API_BASE_URL --build-arg PHX_BACK_HOST_URL=$PHX_BACK_HOST_URL --pull --tag $PHX_IMAGE_COMMIT-$PHX_ENV_TARGET .
    - docker push $PHX_IMAGE_COMMIT-$PHX_ENV_TARGET

# GENERAL DEPLOY
.deploy:

  image: $PHX_IMAGE_COMMIT-$PHX_ENV_TARGET

  stage: deploy

  extends:
    - .target_branches

  environment:
    name: $PHX_ENV_WORKFLOW

  variables:
    NEXUS_ROOT_REPOSITORY: raw-ftven
    GIT_STRATEGY: none

  script:
    - export PHX_PROJECT_ARCHIVE=${PHX_ENV_TARGET}-${CI_PROJECT_NAME}.tar.gz
    - export TAG_ROOT=${CI_COMMIT_TAG:+tags}
    - export REPO_ROOT=${TAG_ROOT:-branches}
    - apk add curl
    - touch $PHX_IMAGE_CWD/.nexusignore
    - tar -X $PHX_IMAGE_CWD/.nexusignore -C $PHX_IMAGE_CWD/build -zcf ~/$PHX_PROJECT_ARCHIVE .
    - curl -s -H "Authorization"":"" ${NEXUS_AUTHORIZATION}" --upload-file ~/$PHX_PROJECT_ARCHIVE
      $NEXUS_URL/$NEXUS_ROOT_REPOSITORY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$REPO_ROOT/$CI_COMMIT_REF_NAME/$PHX_PROJECT_ARCHIVE
